name: Lambda Macie Findings CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'lambda/macie-findings/**'
      - 'lambda/macie-findings/app.py'
      - '.github/workflows/lambda-macie-findings.yml'
  pull_request:
    branches: [main]
    paths:
      - 'lambda/macie-findings/**'
      - 'lambda/macie-findings/app.py'

env:
  AWS_REGION: eu-west-2
  LAMBDA_FUNCTION_NAME: macie-sensitive-data-findings
  PYTHON_VERSION: '3.12'

jobs:
  quality_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements.txt
          pip install boto3 black isort mypy pylint pytest pytest-cov moto
      - name: Run code formatting checks
        run: |
          black lambda/macie-findings/
          isort lambda/macie-findings/
      - name: Run type checking
        run: |
          mypy lambda/macie-findings/ --ignore-missing-imports
      - name: Run linting
        run: |
          pylint lambda/macie-findings/ --disable=C0111,C0103
      - name: Run tests with coverage
        run: |
          PYTHONPATH=$PYTHONPATH:lambda/macie-findings/ pytest --cov=lambda/macie-findings/ --cov-report=xml
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  security-scan:
    runs-on: ubuntu-latest
    needs: quality_checks
    steps:
      - uses: actions/checkout@v3
      - name: Run Bandit security scanner
        run: |
          pip install bandit
          bandit -r lambda/macie-findings/ -f json -o bandit-report.json

  build:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3
          pip install -r requirements/requirements.txt
      - name: Create deployment package
        run: |
          cd lambda/macie-findings/
          zip -r ../macie-findings.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: lambda-package
          path: macie-findings.zip

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: staging
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: lambda-package
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::463470963000:role/github-actions-role
          aws-region: eu-west-2
      - name: Update Lambda Function
        run: |
          aws lambda update-function-code \
            --function-name ${{env.LAMBDA_FUNCTION_NAME}}-staging \
            --zip-file fileb://macie-findings.zip

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{steps.get_url.outputs.url}}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: lambda-package
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::463470963000:role/github-actions-role
          aws-region: eu-west-2
      - name: Update Lambda Function
        id: get_url
        run: |
          aws lambda update-function-code \
            --function-name ${{env.LAMBDA_FUNCTION_NAME}}-prod \
            --zip-file fileb://macie-findings.zip
          echo "::set-output name=url::https://${{env.AWS_REGION}}.console.aws.amazon.com/lambda/home?region=${{env.AWS_REGION}}#/functions/${{env.LAMBDA_FUNCTION_NAME}}-prod"