# Network Policy to restrict pod communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata: 
  name: microservices-policy
  namespace: banking
spec:
  podSelector:
    matchLabels: 
      app: account-service
  policyTypes:
    - Ingress
    - Egress
  ingress:
  - from:
    - podSelector:
      matchLabels:
        app: auth-service
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - ipBlock:
        cidr: "10.2.1.0/24" # Data VPC AZ1 
    - ipBlock:
        cidr: "10.2.2.0/24" # Data VPC AZ2

---

# Resource Quotas
apiVersion: v1
kind: ResourceQuota
metadata:
  name: compute-quota
  namespace: banking
spec: 
  hard:
    requests.cpu: "16"
    requests.memory: 64Gi
    limits.cpu: "32"
    limits.memory: 128Gi

---

# Pod Security Policy
apiVersion: pod-security.kubernetes.io/v1
kind: Pod
metadata: 
  name: security-context
  namespace: banking
spec: 
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 2000
  automountServiceAccountToken: false

---

# RBAC Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata: 
  name: service-role
  namespace: banking
rules: 
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: 
  name: service-rolebinding
  namespace: banking 
subjects: 
- kind: ServiceAccount 
  name: banking-service-account
  namespace: banking 
roleRef: 
  kind: Role 
  name: service-role 
  apiGroup: rbac.authorization.k8s.io/v1